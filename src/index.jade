doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title JavaScript Unit Testing

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available syntax highlighting themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-twilight.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/themes.css')
    // endbuild

  body.cube

    article

      section
        h1 JavaScript Unit Testing
        img(src="images/dilberttestscript.jpg" width="597")

      section
        h2 Why should we automate client side testing?
        .imagebox
          img.float-left(src="images/bigquestionmark.png" width="150")
          .sidebar Many of the same reasons we test our server side code

      section
        h2 Verify expected behaviour
        ul
          li
          li Happy path
          li Error conditions
          li Invalid input
          li Unexpected input

      section
        h2 Prevent regressions
        img(src="images/gorilla-callout.png" width="500")

      section
        h2 Also known as...
        h2 Whack-a-mole!
        img(src="images/whackamole.jpg")

      section
        h2 Document Specs
        hr
        pre
          code.language-javascript.
            // Assume passwordValidator module has been loaded...
            describe('Password Validator', function() {
              it('Rejects short passwords', function() {
                var password = 'foo';
                var result = passwordValidator.isValid(password);
                expect(result).toBe(false);
              });
              it('Accepts password with mixed chars', function() {
                var password = 'abc123*&^%FEG'
                var result = passwordValidator.isValid(password);
                expect(result).toBe(true);
              });
            });

      section
        h2 Refactor with Confidence
        img(src="images/confidence.png" width="370" height="400")

      section
        h2 Leads to cleaner code
        .imagebox
          img.img-padding(src="images/clean-code-circle.png" width="200" height="200")
          img.img-padding(src="images/no-fish-circle.png" width="210" height="210")
        h3 If it's hard to test, that's a code smell

      section
        h2 In the words of Uncle Bob...
        blockquote(cite="http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd") Why don't we clean up code that we know is messy? We're afraid we'll break it. But if we have the tests, we can be reasonably sure that the code is not broken, or that we'll detect the breakage immediately. If we have the tests we become fearless about making changes. If we see messy code, or an unclean structure, we can clean it without fear. Because of the tests, the code becomes malleable again. Because of the tests, software becomes soft again.

      section
        h2 JavaScript unit testing challenges
        ul
          li
          li What are the units?
          li Module dependencies
          li Asynchronous execution?
          li DOM manipulation

      section
        h2 What are the units?
        pre
          code.language-javascript.
            $('button').click(function() {
              var query = $('input').text();
              if (query && query.length >= 2) {
                $.ajax(url: 'http://content.guardianapis.com/search?show-fields=all&q=' + query, success: function(data) {
                  var items = data.response.results;
                  for (i = 0; i < items; i++) {
                    // Only show news items that have pictures
                    if (item.fields.thumbnail) {
                      $('table').append('&lt;tr&gt;')
                      $('table').append('&lt;td&gt;' + item.fields.byline + '&lt;/tr&gt;')  // author
                      $('table').append('&lt;td&gt;' + item.fields.trailText + '&lt;/tr&gt;')  // content
                      $('table').append('&lt;td&gt;' + item.fields.thumbnail + '&lt;/tr&gt;')  // thumbnail
                      $('table').append('&lt;td&gt;' + item.fields.webUrl + '&lt;/tr&gt;')  // url
                      $('table').append('&lt;td&gt;' + item.fields.webTitle + '&lt;/tr&gt;')  // title
                      $('table').append('&lt;td&gt;' + item.fields.webPublicationDate + '&lt;/tr&gt;')  // publishDate
                      $('table').append('&lt;/tr&gt;')
                    }
                  }
                }, error: function(jqXHR, textStatus, errorThrown) {
                  $('.errorBox').text(textStatus + ', ' + errorThrown);
                  $('.errorBox').show();
                });
              }
            });

      section
        h2 Use a module system
        h2 Split up logic into functions
        pre
          code.language-javascript.
            // News Module
            define(['jquery'], function($) {
              var init = function(config) { // pass in DOM elems, register event handlers },
              var validate = function(query) { // validation rules implemented here },
              var getNews = function(query) { // $.ajax... },
              var shouldBeIncluded = function(item) { // business rules implemented here },
              var convertItemsForDisplay = function(items) { // if shouldBeIncluded(item) convert ... },
              var display = function(displayItems, config.outputTarget) { // dom manipulation... }

              // Expose methods
              return {
                init: init,
                validate: validate,
                getNews: getNews
                ...
              }
            });

      // Maybe this belongs with last slide on references?
      section
        h2 A stack for JS testing
        ul
          li
          li Mocha Tests: describe... it...
          li Chai Assertions: expect...
          li Karma Runner: Automated runs, multiple browsers, reporters

      section
        h2 Load module in a test
        pre
          code.language-javascript.
            // News module is the fixture under test
            define(['../news', 'jquery'], function(fixture, $) {
              // Can call methods of news module,
              // such as example fixture.init, fixture.validate etc.
            });

      section
        h2 Test validation
        pre
          code.language-javascript.
            define(['../news', 'jquery'], function(fixture, $) {
              describe('validate', function() {
                it('Does not allow null query', function() {
                  expect(fixture.validate(null)).to.be(false);
                });
                it('Does not allow null short query', function() {
                  expect(fixture.validate('a')).to.be(false);
                });
                it('Allows query string of 2 characters', function() {
                  expect(fixture.validate('ab')).to.be(true);
                });
              });
            });

      section
        h2 Test list conversion
        pre
          code.language-javascript.
            describe('convertItemsForDisplay', function() {
              // Build sample response from API
              var itemsFromApi = [{}, {}, {}];
              var result = fixture.convertNewsItemsForDisplay(itemsFromApi);
              expect(result).to.have.length()
            });

      // Last slide?
      section
        h2 References
        ul
          li Mocha
          li Chai
          li Karma

      section(data-bespoke-hash='named-route')
        h2 Named Route
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-hash">bespoke-hash</a>
        p Look up! This route has been named with a <em>'data-bespoke-hash'</em> attribute.

      section(data-bespoke-state='emphatic')
        h2 Emphatic Slide!
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-state">bespoke-state</a>

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild