doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title JavaScript Unit Testing

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available syntax highlighting themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-twilight.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/themes.css')
    // endbuild

  body.cube

    article

      section
        h1 JavaScript
          br
          | Unit Testing
        img(src="images/dilberttestscript.jpg" width="597")

      section
        h2 Why should we automate client side testing?
        .imagebox
          img.float-left(src="images/bigquestionmark.png" width="150")
          //- .sidebar
          ul.left-align
            li
              li.list-oomph Business logic is moving from server to client
              li.list-oomph The same benefits of server side testing transfer to client

      section
        h2 Verify Expectations
        ul.left-align.fa-ul
          li
          li.list-oomph.success
              i.fa-li.fa.fa-thumbs-up.fa-lg
              | Happy path
          li.list-oomph.error
              i.fa-li.fa.fa-thumbs-down.fa-lg
              | Error conditions
          li.list-oomph.alert
              i.fa-li.fa.fa-times.icon-padding.fa-lg
              | Invalid input
          li.list-oomph.unexpected
              i.fa-li.fa.fa-warning.icon-padding.fa-lg
              | Unexpected input

      section
        h2 Prevent regressions
        img(src="images/gorilla-with-mac.png" width="500")

      section
        h2 a.k.a. Whack-a-mole!
        //- h3 Fix a bug, introduce another...
        img(src="images/whackamole.jpg")
        ul.left-align.fa-ul
          li
          li.list-oomph.smell
              i.fa-li.fa.fa-frown-o.fa-lg
              | Fix a bug, introduce another...

      section
        h2 Document Specs
        h3 The only documentation that is kept up to date
        pre.hack-height-2
          code.language-javascript.
            describe('Password Validator', function() {
              it('Rejects short passwords', function() {
                var password = 'foo';
                var result = passwordValidator.isValid(password);
                expect(result).to.be(false);
              });
              it('Accepts password with mixed chars', function() {
                var password = 'abc123*&^%FEG'
                var result = passwordValidator.isValid(password);
                expect(result).to.be(true);
              });
            });

      section
        h2 Refactor with Confidence
        img(src="images/confidence.png" width="370" height="400")

      section
        h2 Leads to cleaner code
        .imagebox
          img.img-padding(src="images/clean-code-circle.png" width="200" height="200")
          img.img-padding(src="images/no-fish-circle.png" width="210" height="210")
        ul.left-align.fa-ul
          li
          li.list-oomph.smell
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | If it's hard to test, that's a smell!

      section
        h2 In the words of Uncle Bob...
        p.custom-quote
          i.fa.fa-quote-left.fa-3x.pull-left.fa-border.quote-border
          | Why don't we clean up code that we know is messy? We're afraid we'll break it. But if we have the tests, we can be reasonably sure that the code is not broken, or that we'll detect the breakage immediately. If we have the tests we become fearless about making changes. If we see messy code, or an unclean structure, we can clean it without fear. Because of the tests, the code becomes malleable again. Because of the tests, software becomes soft again.
        .custom-cite
          a(href="http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd") The Three Rules of TDD

      section
        h2 JavaScript Unit Testing Challenges
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-cubes.fa-lg
              | What are the units?
          li.list-oomph
              i.fa-li.fa.fa-random.fa-lg
              | Asynchronous execution
          li.list-oomph
              i.fa-li.fa.fa-file-code-o.fa-lg
              | DOM manipulation
          li.list-oomph
              i.fa-li.fa.fa-cog.fa-spin.fa-lg
              | What tools are available?

      section
        h2.big-heading What are the units?
        pre
          code.language-javascript.
            $('button').click(function() {
              var query = $('input').text();
              // Validation rule: only search if we have a query of at least two chars
              if (query && query.length >= 2) {
                $.ajax(url: 'http://content.guardianapis.com/search?show-fields=all&q=' + query, success: function(data) {
                  var items = data.response.results;
                  for (i = 0; i < items; i++) {
                    // Business rule: only show news items that have pictures
                    if (item.fields.thumbnail) {
                      // sentiment is a global!
                      sentimentResult = sentiment.analyze(item.fields.trailText);
                      $('table').append('&lt;tr&gt;')
                      $('table').append('&lt;td&gt;' + item.fields.byline + '&lt;/tr&gt;')  // author
                      $('table').append('&lt;td&gt;' + item.fields.trailText + '&lt;/tr&gt;')  // content
                      $('table').append('&lt;td&gt;' + item.fields.thumbnail + '&lt;/tr&gt;')  // thumbnail
                      $('table').append('&lt;td&gt;' + item.fields.webUrl + '&lt;/tr&gt;')  // url
                      $('table').append('&lt;td&gt;' + item.fields.webTitle + '&lt;/tr&gt;')  // title
                      $('table').append('&lt;td&gt;' + item.fields.webPublicationDate + '&lt;/tr&gt;')  // publishDate
                      $('table').append('&lt;td&gt;' + sentimentResult + '&lt;/tr&gt;')  // sentiment analysis
                      $('table').append('&lt;/tr&gt;')
                    }
                  }
                }, error: function(jqXHR, textStatus, errorThrown) {
                  $('.errorBox').text(textStatus + ', ' + errorThrown);
                  $('.errorBox').show();
                });
              }
            });

      section
        h2 Use a module system
        pre.hack-height
          code.language-javascript.
            // News Module
            define(['jquery', 'sentiment'], function($, sentiment) {
              var init = function(config) { ... },
              var validate = function(query) { ... },
              var search = function(query) { ... },
              var process = function(items) { ... },
              var display = function(loadInto, items) { ... }
            });
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Break up logic into small functions
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Declare dependencies in separate modules

      section
        h2 Stack for BDD Style Testing
        ul.left-align
          li
          li
            a(href="http://visionmedia.github.io/mocha/") Mocha test framework
            |  describe... it...
          li
            a(href="http://chaijs.com/api/bdd/") Chai Assertion Library
            |  expect... to...
          li
            a(href="http://sinonjs.org/docs/") Sinon.JS
            |  spies, stubs, and mocks
          li
            a(href="http://karma-runner.github.io/0.12/intro/how-it-works.html") Karma Runner
            |  Multiple browsers, reporters
          li
            a(href="https://github.com/karma-runner/grunt-karma") Grunt
            |  Run automation, local and CI
          li
            a(href="http://jasmine.github.io/1.3/introduction.html") Jasmine
            |  is an alternative that can be used in place of Mocha, Chai and Sinon

      section
        h2 Load module in a test
        pre
          code.language-javascript.
            // News module is the fixture under test
            define(['../news', 'jquery'], function(fixture, $) {
              describe('News Module', function() {
                it('Does something', function() {
                  expect(fixture.foo()).to.equal('bar');
                });
              });
            });

      section
        h2
          a(href="https://github.com/danielabar/learn-js-test") Demo
        h3 Simple function with inputs and output
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | No dependencies
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Synchronous
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | No side effects

      section
        h2
          a(href="https://github.com/danielabar/learn-js-test") Demo
        h3 Using Sinon to mock out dependency
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Test one thing only
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Mock out everything else
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Verify interactions

      section
        h2
          a(href="https://github.com/danielabar/learn-js-test") Demo
        h3 Asynchronous Execution
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Use promises
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Use sinon to mock and replace function - resolve or reject
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Call Mocha's done() method to signify end of test

      section
        h2
          a(href="https://github.com/danielabar/learn-js-test") Demo
        h3 DOM Manipulation
        ul.left-align.fa-ul
          li
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Use Karma html2js plugin
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Inject HTML snippet for code to operate on
          li.list-oomph
              i.fa-li.fa.fa-arrow-circle-right.fa-lg
              | Use jQuery to verify HTML snippet was modified

      section
        h2 Karma Features
        ul.left-align
          li
          li Capture multiple browsers
            img(src="images/Chrome.png" width="30" height="30")
            img(src="images/Firefox.png" width="30" height="30")
            img(src="images/Safari.png" width="30" height="30")
            img(src="images/Opera.png" width="30" height="30")
            img(src="images/IE.png" width="30" height="30")
          li Test from other devices
            i.fa.fa-mobile.icon-padding
            i.fa.fa-tablet.icon-padding
          li
            a(href="http://karma-runner.github.io/0.8/config/coverage.html") Coverage reporter
          li
            a(href="https://www.npmjs.org/search?q=karma") Many other plugins available

      section(data-bespoke-state='emphatic')
        img.img-border(src="images/banner_qa.jpg")

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild